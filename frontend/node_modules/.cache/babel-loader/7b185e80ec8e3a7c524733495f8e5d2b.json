{"ast":null,"code":"var _jsxFileName = \"/Users/b0218978/Desktop/owl2bench/frontend/src/types/Checkbox.js\";\nimport React, { useState } from \"react\";\n\nconst Checkbox = ({\n  label,\n  isSelected,\n  onCheckboxChange,\n  heading\n}) => {\n  const [textInput, setText] = useState(\"\");\n  const [checked, setCheck] = useState(label); //console.log(isSelected+\" \"+label);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-5\",\n    id: heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: label,\n    name: label,\n    checked: isSelected,\n    onChange: onCheckboxChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }), label), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    // class=\"form-group col-md-12\"\n    class: \"col-md-14\",\n    type: \"text\",\n    id: label + \"Text\",\n    width: \"20px\",\n    height: \"20px\",\n    onChange: event => {\n      //console.log(\"Input \"+label+\" \"+document.getElementById(label).checked);\n      //console.log(\"Input \"+isNaN(document.getElementById(label+\"Text\").value));\n      if (document.getElementById(label).checked) {\n        if (!isNaN(document.getElementById(label + \"Text\").value)) {\n          setText(event.target.value);\n        } else {\n          setText(\"\");\n          alert(\"Please Enter A Number\");\n        }\n      } else {\n        alert(\"First Tick Checkbox\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Checkbox;","map":{"version":3,"sources":["/Users/b0218978/Desktop/owl2bench/frontend/src/types/Checkbox.js"],"names":["React","useState","Checkbox","label","isSelected","onCheckboxChange","heading","textInput","setText","checked","setCheck","event","document","getElementById","isNaN","value","target","alert"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,UAAT;AAAqBC,EAAAA,gBAArB;AAAuCC,EAAAA;AAAvC,CAAD,KAAsD;AACrE,QAAM,CAACC,SAAD,EAAYC,OAAZ,IAAuBP,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACQ,OAAD,EAAUC,QAAV,IAAsBT,QAAQ,CAACE,KAAD,CAApC,CAFqE,CAGrE;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAyB,IAAA,EAAE,EAAEG,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,EAAE,EAAEH,KAFN;AAGE,IAAA,IAAI,EAAEA,KAHR;AAIE,IAAA,OAAO,EAAEC,UAJX;AAKE,IAAA,QAAQ,EAAEC,gBALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQGF,KARH,CAFF,eAYE;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE;AACA,IAAA,KAAK,EAAC,WAFR;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,EAAE,EAAEA,KAAK,GAAG,MAJd;AAKE,IAAA,KAAK,EAAC,MALR;AAME,IAAA,MAAM,EAAC,MANT;AAOE,IAAA,QAAQ,EAAGQ,KAAD,IAAW;AACnB;AACA;AACA,UAAIC,QAAQ,CAACC,cAAT,CAAwBV,KAAxB,EAA+BM,OAAnC,EAA4C;AAC1C,YAAI,CAACK,KAAK,CAACF,QAAQ,CAACC,cAAT,CAAwBV,KAAK,GAAG,MAAhC,EAAwCY,KAAzC,CAAV,EAA2D;AACzDP,UAAAA,OAAO,CAACG,KAAK,CAACK,MAAN,CAAaD,KAAd,CAAP;AACD,SAFD,MAEO;AACLP,UAAAA,OAAO,CAAC,EAAD,CAAP;AACAS,UAAAA,KAAK,CAAC,uBAAD,CAAL;AACD;AACF,OAPD,MAOO;AACLA,QAAAA,KAAK,CAAC,qBAAD,CAAL;AACD;AACF,KApBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAZF,CADF;AAuCD,CA3CD;;AA6CA,eAAef,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Checkbox = ({ label, isSelected, onCheckboxChange, heading }) => {\r\n  const [textInput, setText] = useState(\"\");\r\n  const [checked, setCheck] = useState(label);\r\n  //console.log(isSelected+\" \"+label);\r\n  return (\r\n    <div className=\"row\">\r\n      <label className=\"col-1\"></label>\r\n      <label className=\"col-5\" id={heading}>\r\n        <input\r\n          type=\"checkbox\"\r\n          id={label}\r\n          name={label}\r\n          checked={isSelected}\r\n          onChange={onCheckboxChange}\r\n        />\r\n        {label}\r\n      </label>\r\n      <label className=\"col-2\">\r\n        <input\r\n          // class=\"form-group col-md-12\"\r\n          class=\"col-md-14\"\r\n          type=\"text\"\r\n          id={label + \"Text\"}\r\n          width=\"20px\"\r\n          height=\"20px\"\r\n          onChange={(event) => {\r\n            //console.log(\"Input \"+label+\" \"+document.getElementById(label).checked);\r\n            //console.log(\"Input \"+isNaN(document.getElementById(label+\"Text\").value));\r\n            if (document.getElementById(label).checked) {\r\n              if (!isNaN(document.getElementById(label + \"Text\").value)) {\r\n                setText(event.target.value);\r\n              } else {\r\n                setText(\"\");\r\n                alert(\"Please Enter A Number\");\r\n              }\r\n            } else {\r\n              alert(\"First Tick Checkbox\");\r\n            }\r\n          }}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Checkbox;\r\n"]},"metadata":{},"sourceType":"module"}