{"ast":null,"code":"import _slicedToArray from\"/Users/b0218978/Desktop/owl2bench/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import Checkbox from\"./Checkbox.js\";import\"../bootstrap.min.css\";function Predefined(props){var _useState=useState(props.initally),_useState2=_slicedToArray(_useState,2),checked=_useState2[0],setCheck=_useState2[1];// console.log(\n//   \" pred \" +\n//     props.initally.length +\n//     \" \" +\n//     checked[0] +\n//     \" \" +\n//     props.initally[0]\n// );\nuseEffect(function(){var flag=false;for(var i=0;i<checked.length;i++){if(checked[i]!=props.initally[i]){flag=true;break;}}if(flag==true){setCheck(props.initally);}});var toggle=function toggle(e,boolVal){props.toggleParent(e.target.id,boolVal);};var selectAll=function selectAll(e){return toggle(e,true);};var selectNone=function selectNone(e){return toggle(e,false);};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"h5\",{className:\"col-3\"}),/*#__PURE__*/React.createElement(\"h5\",null,props.heading)),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-1\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"col-5\"},/*#__PURE__*/React.createElement(\"button\",{id:props.heading,class:\"btn btn-secondary\",onClick:function onClick(event){selectAll(event);}},\" \",\"Select All\",\" \"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",class:\"col-md-3 mb-3\",id:\"selectAllInput\"+props.heading,placeholder:\"Input\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"col-5\"},/*#__PURE__*/React.createElement(\"button\",{id:props.heading,class:\"btn btn-secondary\",onClick:function onClick(event){selectNone(event);}},\"Select None\"))),/*#__PURE__*/React.createElement(\"br\",null),props.constructs.map(function(construct){return/*#__PURE__*/React.createElement(Checkbox,{heading:props.heading,label:construct,isSelected:checked[props.indexes[construct]],onCheckboxChange:function onCheckboxChange(event){return props.handleCheckboxChange(event);},key:construct});}));}export default Predefined;//  selectAll.bind(this);selectNone.bind(this);\n// let invertToggle = (e) => {\n//     let allCheck = [];\n//     for(let i = 0 ; i < checked.length ; i++ ){\n//         allCheck[i] = !checked[i];\n//     }\n//     setCheck(allCheck);\n// }\n// let toggle = (e,boolVal) => {\n//     console.log(e.target.id);\n//     let allCheck = [];\n//     for(let i = 0 ; i < checked.length ; i++ ){\n//         allCheck[i] = boolVal;\n//     }\n//     setCheck(allCheck);\n//     props.toggleParent(e.target.id,boolVal);\n// }\n// let handleCheckboxChange = (e) => {\n//     const nameclicked = e.target.name;\n//     if ( e.target.checked == false ){\n//         document.getElementById(nameclicked+\"Text\").value = \"\";\n//     }\n//     let allCheck = [...checked];\n//     allCheck[props.indexes[nameclicked]] = !checked[props.indexes[nameclicked]];\n//     setCheck(allCheck);\n//     //console.log(nameclicked+\" \"+e.target.checked+\" \"+document.getElementById(nameclicked+\"Text\").value+\" value \"+indexes[nameclicked]+\" \"+!checked[indexes[nameclicked]]);\n// }","map":{"version":3,"sources":["/Users/b0218978/Desktop/owl2bench/frontend/src/types/Predefined.js"],"names":["React","useState","useEffect","Checkbox","Predefined","props","initally","checked","setCheck","flag","i","length","toggle","e","boolVal","toggleParent","target","id","selectAll","selectNone","heading","event","constructs","map","construct","indexes","handleCheckboxChange"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Checkbox from \"./Checkbox.js\";\r\nimport \"../bootstrap.min.css\";\r\n\r\nfunction Predefined(props) {\r\n  const [checked, setCheck] = useState(props.initally);\r\n  // console.log(\r\n  //   \" pred \" +\r\n  //     props.initally.length +\r\n  //     \" \" +\r\n  //     checked[0] +\r\n  //     \" \" +\r\n  //     props.initally[0]\r\n  // );\r\n  useEffect(() => {\r\n    let flag = false;\r\n    for (let i = 0; i < checked.length; i++) {\r\n      if (checked[i] != props.initally[i]) {\r\n        flag = true;\r\n        break;\r\n      }\r\n    }\r\n    if (flag == true) {\r\n      setCheck(props.initally);\r\n    }\r\n  });\r\n  let toggle = (e, boolVal) => {\r\n    props.toggleParent(e.target.id, boolVal);\r\n  };\r\n  let selectAll = (e) => toggle(e, true);\r\n  let selectNone = (e) => toggle(e, false);\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <h5 className=\"col-3\"></h5>\r\n        <h5>{props.heading}</h5>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-1\"></div>\r\n        <div className=\"col-5\">\r\n          <button\r\n            id={props.heading}\r\n            class=\"btn btn-secondary\"\r\n            onClick={(event) => {\r\n              selectAll(event);\r\n            }}\r\n          >\r\n            {\" \"}\r\n            Select All{\" \"}\r\n          </button>\r\n          <input\r\n            type=\"text\"\r\n            class=\"col-md-3 mb-3\"\r\n            id={\"selectAllInput\" + props.heading}\r\n            placeholder=\"Input\"\r\n          ></input>\r\n        </div>\r\n        <div className=\"col-5\">\r\n          <button\r\n            id={props.heading}\r\n            class=\"btn btn-secondary\"\r\n            onClick={(event) => {\r\n              selectNone(event);\r\n            }}\r\n          >\r\n            Select None\r\n          </button>\r\n        </div>\r\n        {/* <div className=\"col-3\">\r\n                    <button id={props.heading} class=\"btn btn-secondary\" onClick={ (event) => { props.invertToggle(event); } }>Invert Selections</button>\r\n                </div> */}\r\n      </div>\r\n      <br></br>\r\n      {props.constructs.map((construct) => {\r\n        return (\r\n          <Checkbox\r\n            heading={props.heading}\r\n            label={construct}\r\n            isSelected={checked[props.indexes[construct]]}\r\n            onCheckboxChange={(event) => props.handleCheckboxChange(event)}\r\n            key={construct}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Predefined;\r\n\r\n//  selectAll.bind(this);selectNone.bind(this);\r\n// let invertToggle = (e) => {\r\n//     let allCheck = [];\r\n//     for(let i = 0 ; i < checked.length ; i++ ){\r\n//         allCheck[i] = !checked[i];\r\n//     }\r\n//     setCheck(allCheck);\r\n// }\r\n// let toggle = (e,boolVal) => {\r\n//     console.log(e.target.id);\r\n//     let allCheck = [];\r\n//     for(let i = 0 ; i < checked.length ; i++ ){\r\n//         allCheck[i] = boolVal;\r\n//     }\r\n//     setCheck(allCheck);\r\n//     props.toggleParent(e.target.id,boolVal);\r\n// }\r\n// let handleCheckboxChange = (e) => {\r\n//     const nameclicked = e.target.name;\r\n//     if ( e.target.checked == false ){\r\n//         document.getElementById(nameclicked+\"Text\").value = \"\";\r\n//     }\r\n//     let allCheck = [...checked];\r\n//     allCheck[props.indexes[nameclicked]] = !checked[props.indexes[nameclicked]];\r\n//     setCheck(allCheck);\r\n//     //console.log(nameclicked+\" \"+e.target.checked+\" \"+document.getElementById(nameclicked+\"Text\").value+\" value \"+indexes[nameclicked]+\" \"+!checked[indexes[nameclicked]]);\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}